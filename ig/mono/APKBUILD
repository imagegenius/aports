# Contributor: Carlo Landmeter <clandmeter@gmail.com>
# Contributor: blattersturm <peachypies@protonmail.ch>
# Contributor: frebib <mono-apk@spritsail.io>
# Maintainer: hydaz <ci@imagegenius.io>

pkgname=mono
pkgver=6.12.0.182
pkgrel=0
pkgdesc="Free implementation of the .NET platform including runtime and compiler"
url="https://www.mono-project.com/"
arch="all !s390x !ppc64le !riscv64"
license="MIT"
depends_dev="libgdiplus-dev zlib-dev"
makedepends="$depends_dev autoconf automake bash cmake libtool linux-headers"
subpackages="
	$pkgname-dbg
	$pkgname-dev
	$pkgname-lang
	$pkgname-runtime
	$pkgname-runtime-doc:runtime_doc:noarch
	lib$pkgname:libmono
	lib$pkgname:libmono_profiler
	ca-certificates-$pkgname:cacerts:noarch
	ca-certificates-$pkgname-doc:cacerts_doc:noarch
	monodoc::noarch
	$pkgname-utils
	$pkgname-csc::noarch
	$pkgname-xbuild::noarch
	$pkgname-doc
	$pkgname-reference-assemblies-facades:assembliesfacades:noarch
	$pkgname-reference-assemblies-api:assembliesapi:noarch
	$pkgname-reference-assemblies:assemblies:noarch
	$pkgname-reference-assemblies-2.0:assemblies20:noarch
	$pkgname-reference-assemblies-3.5:assemblies35:noarch
	$pkgname-reference-assemblies-4.0:assemblies40:noarch
	$pkgname-reference-assemblies-4.x:assemblies4x:noarch
"
source="
	https://download.mono-project.com/sources/mono/mono-${pkgver/_/~}.tar.xz
	0001-Avoid-setting-PTHREAD_PRIO_INHERIT-on-Alpine-since-t.patch
"
install="ca-certificates-$pkgname.post-deinstall"
builddir="$srcdir/$pkgname-$pkgver"

build() {
    # Based on Fedora and SUSE package.
    export CFLAGS="$CFLAGS -fno-strict-aliasing"

    # Set the minimum arch for x86 to prevent atomic linker errors.
    [ "$CARCH" = "x86" ] && export CFLAGS="$CFLAGS -march=i586 -mtune=generic"

    # Run autogen to fix supplied configure linker issues with make install.
    ./autogen.sh \
        --build=$CBUILD \
        --host=$CHOST \
        --prefix=/usr \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --localstatedir=/var \
        --disable-dependency-tracking \
        --disable-system-aot \
        --disable-rpath \
        --disable-boehm \
        --enable-parallel-mark \
        --with-large-heap=yes \
        --with-x=no \
        --with-libgc=none \
        --with-mcs-docs=no \
        --with-ikvm-native=no \
        --without-sigaltstack

    make -j$(nproc)
}

package() {
    make -j1 DESTDIR="$pkgdir" install

    cd "$pkgdir"

    sed -i 's|$mono_libdir/||g' etc/mono/config

    # Remove .la files.
    rm usr/lib/*.la
    # Remove Windows-only stuff.
    rm -rf usr/lib/mono/*/Mono.Security.Win32*
}

subpkg_mv() {
    local f= d=

    for f in "$@"; do
        if [ -e "$pkgdir/$f" ] || [ -L "$pkgdir/$f" ]; then
            d="$subpkgdir/${f%/*}"
            mkdir -p "$d"
            mv "$pkgdir/$f" "$d"
            rmdir -p "$pkgdir/${f%/*}" 2>/dev/null || :
        fi
    done
}

runtime() {
    pkgdesc="Mono SGen runtime"

    cd "$pkgdir"
    subpkg_mv \
        etc/mono/2.0 \
        etc/mono/4.0 \
        etc/mono/4.5 \
        etc/mono/browscap.ini \
        etc/mono/config \
        etc/mono/mconfig \
        usr/bin/mono \
        usr/bin/mono-hang-watchdog \
        usr/bin/mono-sgen \
        usr/lib/libMonoPosixHelper.so \
        usr/lib/libMonoSupportW.so \
        usr/lib/libmono-btls-shared.so \
        usr/lib/libmono-native.so* \
        usr/lib/mono/4.5/mscorlib.dll \
        usr/lib/mono/gac/Mono.Cecil \
        usr/share/mono-2.0/mono/cil
}

runtime_doc() {
    pkgdesc="Mono runtime documentation"
    depends="$pkgname-runtime"

    local manpage=
    for manpage in \
        usr/share/man/man1/mono.1 \
        usr/share/man/man5/mono-config.5; do
        mkdir -p "$(dirname "$subpkgdir/$manpage")"
        gzip -9 <"$pkgdir/$manpage" >"$subpkgdir/$manpage".gz
        rm "$pkgdir/$manpage"
    done
}

cacerts() {
    pkgdesc="Mono CA certificates sync utility"
    depends="$pkgname-reference-assemblies ca-certificates"

    mkdir -p "$subpkgdir"/usr/bin "$subpkgdir"/usr/lib/mono/4.5
    mv "$pkgdir"/usr/bin/cert-sync "$subpkgdir"/usr/bin
    mv "$pkgdir"/usr/lib/mono/4.5/cert-sync.exe "$subpkgdir"/usr/lib/mono/4.5

    mkdir -p "$subpkgdir"/etc/ca-certificates/update.d
    cat >"$subpkgdir"/etc/ca-certificates/update.d/ca-certificates-mono <<-EOF
		#!/bin/sh
		exec cert-sync /etc/ssl/certs/ca-certificates.crt
	EOF
    chmod +x "$subpkgdir"/etc/ca-certificates/update.d/ca-certificates-mono
}

cacerts_doc() {
    pkgdesc="Mono CA certificates sync utility documentation"

    for manpage in \
        usr/share/man/man1/cert-sync.1; do
        mkdir -p "$(dirname "$subpkgdir/$manpage")"
        gzip -9 <"$pkgdir/$manpage" >"$subpkgdir/$manpage".gz
        rm "$pkgdir/$manpage"
    done
}

dev() {
    pkgdesc="Mono runtime development files and utilities"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/include \
        usr/lib/pkgconfig \
        usr/lib/mono-source-libs \
        usr/lib/mono/mono-configuration-crypto \
        $(find usr -name '*.[acho]' 2>/dev/null)

    local bin=
    for bin in \
        RabbitMQ.Client.Apigen \
        al \
        al2 \
        aprofutil \
        browsercaps-updater \
        caspol \
        cccheck \
        ccrewrite \
        cert2spc \
        certmgr \
        chktrust \
        crlupdate \
        culevel \
        disco \
        dtd2rng \
        dtd2xsd \
        genxs \
        httpcfg \
        ictool \
        ikdasm \
        ilasm \
        illinkanalyzer \
        installutil \
        installvst \
        lc \
        macpack \
        makecert \
        mconfig \
        mdbrebase \
        mkbundle \
        mono-api-check \
        mono-api-diff \
        mono-api-html \
        mono-api-info \
        mono-cil-strip \
        mono-configuration-crypto \
        mono-csc \
        mono-heapviz \
        mono-package-runtime \
        mono-service \
        mono-service2 \
        mono-shlib-cop \
        mono-symbolicate \
        mono-test-install \
        mono-xmltool \
        monolinker \
        monop \
        monop2 \
        mozroots \
        pdb2mdb \
        permview \
        resgen \
        resgen2 \
        secutil \
        setreg \
        sgen \
        sgen-grep-binprot \
        signcode \
        sn \
        soapsuds \
        sqlmetal \
        sqlsharp \
        svcutil \
        wsdl \
        wsdl2 \
        xsd; do
        subpkg_mv \
            usr/bin/${bin} \
            usr/lib/mono/4.5/${bin}.exe \
            usr/lib/mono/4.5/${bin}.exe.config \
            usr/lib/mono/gac/${bin}
    done
}

assemblies() {
    pkgdesc="Mono 4.5 reference assemblies"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/bin/gacutil \
        usr/bin/gacutil2 \
        usr/lib/mono/4.5/gacutil.exe

    mkdir -p \
        "$subpkgdir"/usr/lib/mono/4.5 \
        "$subpkgdir"/usr/lib/mono/gac

    local asm=
    for asm in \
        Accessibility \
        Commons.Xml.Relaxng \
        cscompmgd \
        CustomMarshalers \
        I18N.CJK \
        I18N \
        I18N.MidEast \
        I18N.Other \
        I18N.Rare \
        I18N.West \
        IBM.Data.DB2 \
        ICSharpCode.SharpZipLib \
        Microsoft.CSharp \
        Microsoft.VisualC \
        Microsoft.Web.Infrastructure \
        Mono.Btls.Interface \
        Mono.Cairo \
        Mono.CodeContracts \
        Mono.CompilerServices.SymbolWriter \
        Mono.CSharp \
        Mono.Data.Sqlite \
        Mono.Data.Tds \
        Mono.Debugger.Soft \
        Mono.Http \
        Mono.Management \
        Mono.Messaging \
        Mono.Messaging.RabbitMQ \
        Mono.Parallel \
        Mono.Posix \
        Mono.Security \
        Mono.Simd \
        Mono.Tasklets \
        Mono.WebBrowser \
        Novell.Directory.Ldap \
        PEAPI \
        RabbitMQ.Client \
        SMDiagnostics \
        System.ComponentModel.Composition \
        System.ComponentModel.DataAnnotations \
        System.Configuration \
        System.Configuration.Install \
        System.Core \
        System.Data.DataSetExtensions \
        System.Data \
        System.Data.Entity \
        System.Data.Linq \
        System.Data.OracleClient \
        System.Data.Services.Client \
        System.Data.Services \
        System.Deployment \
        System.Design \
        System.DirectoryServices \
        System.DirectoryServices.Protocols \
        System \
        System.Drawing.Design \
        System.Drawing \
        System.Dynamic \
        System.EnterpriseServices \
        System.IdentityModel \
        System.IdentityModel.Selectors \
        System.IO.Compression \
        System.IO.Compression.FileSystem \
        System.Json \
        System.Json.Microsoft \
        System.Management \
        System.Memory \
        System.Messaging \
        System.Net \
        System.Net.Http \
        System.Net.Http.Formatting \
        System.Net.Http.WebRequest \
        System.Numerics \
        System.Numerics.Vectors \
        System.Reactive.Core \
        System.Reactive.Debugger \
        System.Reactive.Experimental \
        System.Reactive.Interfaces \
        System.Reactive.Linq \
        System.Reactive.Observable.Aliases \
        System.Reactive.PlatformServices \
        System.Reactive.Providers \
        System.Reactive.Runtime.Remoting \
        System.Reactive.Windows.Forms \
        System.Reactive.Windows.Threading \
        System.Reflection.Context \
        System.Runtime.Caching \
        System.Runtime.CompilerServices.Unsafe \
        System.Runtime.DurableInstancing \
        System.Runtime.Remoting \
        System.Runtime.Serialization \
        System.Runtime.Serialization.Formatters.Soap \
        System.Security \
        System.ServiceModel.Activation \
        System.ServiceModel.Discovery \
        System.ServiceModel \
        System.ServiceModel.Internals \
        System.ServiceModel.Routing \
        System.ServiceModel.Web \
        System.ServiceProcess \
        System.Threading.Tasks.Dataflow \
        System.Threading.Tasks.Extensions \
        System.Transactions \
        System.Web.Abstractions \
        System.Web.ApplicationServices \
        System.Web \
        System.Web.DynamicData \
        System.Web.Extensions.Design \
        System.Web.Extensions \
        System.Web.Http \
        System.Web.Http.SelfHost \
        System.Web.Http.WebHost \
        System.Web.Mobile \
        System.Web.Mvc \
        System.Web.Razor \
        System.Web.RegularExpressions \
        System.Web.Routing \
        System.Web.Services \
        System.Web.WebPages.Deployment \
        System.Web.WebPages \
        System.Web.WebPages.Razor \
        System.Windows \
        System.Windows.Forms.DataVisualization \
        System.Windows.Forms \
        System.Workflow.Activities \
        System.Workflow.ComponentModel \
        System.Workflow.Runtime \
        System.Xaml \
        System.Xml \
        System.Xml.Linq \
        System.Xml.Serialization \
        WebMatrix.Data \
        WindowsBase; do
        mv "$pkgdir"/usr/lib/mono/4.5/${asm}.dll "$subpkgdir"/usr/lib/mono/4.5/
        if [ -L "$subpkgdir/usr/lib/mono/4.5/${asm}.dll" ]; then
            mv "$pkgdir"/usr/lib/mono/gac/${asm} "$subpkgdir"/usr/lib/mono/gac/
        fi
    done

}
assembliesapi() {
    pkgdesc="Mono 4.5 api reference assemblies"
    depends="$pkgname-runtime $pkgname-reference-assemblies"

    cd "$pkgdir"
    subpkg_mv usr/lib/mono/4.5-api
}
assembliesfacades() {
    pkgdesc="Mono 4.5 reference assemblies facades"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv usr/lib/mono/4.5/Facades
}

assemblies20() {
    pkgdesc="Mono 2.0 reference assemblies"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv usr/lib/mono/2.0-api
}
assemblies35() {
    pkgdesc="Mono 3.5 reference assemblies"
    depends="$pkgname-runtime $pkgname-reference-assemblies-2.0"

    cd "$pkgdir"
    subpkg_mv usr/lib/mono/3.5-api
}
assemblies40() {
    pkgdesc="Mono 4.0 reference assemblies"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/lib/mono/4.0 \
        usr/lib/mono/4.0-api
}

assemblies4x() {
    pkgdesc="Mono 4.x reference assemblies"
    depends="$pkgname-runtime $pkgname-reference-assemblies"

    cd "$pkgdir"
    subpkg_mv usr/lib/mono/4.*-api
}

libmono() {
    pkgdesc="Shared library for Mono runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/lib/libmono-2.0.so* \
        usr/lib/libmonosgen-2.0.so* \
        usr/share/mono-2.0/mono/profiler
}

libmono_profiler() {
    pkgdesc="Profiler libraries for Mono, used for profiling applications running on Mono"

    cd "$pkgdir"
    subpkg_mv \
        usr/lib/libmono-profiler-*.so* \
        usr/lib/mono/4.5/Mono.Profiler.Log.dll \
        usr/lib/mono/gac/Mono.Profiler.Log
}

monodoc() {
    pkgdesc="Monodoc is a set of libraries and applications for viewing and editing Mono class library documentation."
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/bin/mdoc* \
        usr/bin/mod \
        usr/bin/monodoc* \
        usr/bin/mdassembler \
        usr/bin/mdvalidater \
        usr/lib/mono/4.5/mdoc.exe \
        usr/lib/mono/4.5/mod.exe \
        usr/lib/mono/monodoc \
        usr/lib/mono/gac/monodoc
}

utils() {
    pkgdesc="Common utilities for Mono runtime"
    depends="$pkgname-runtime"

    cd "$pkgdir"
    subpkg_mv \
        usr/bin/mono-find-provides \
        usr/bin/mono-find-requires \
        usr/bin/monodis \
        usr/bin/mprof-report \
        usr/bin/pedump \
        usr/bin/peverify
}

csc() {
    pkgdesc="Mono C# compiler (csc)"
    depends="$pkgname-runtime $pkgname-reference-assemblies $pkgname-reference-assemblies-facades"

    cd "$pkgdir"

    local asm=
    for bin in \
        csc \
        csharp \
        csi \
        dmcs \
        mcs \
        vbc; do
        subpkg_mv \
            usr/bin/${bin} \
            usr/lib/mono/4.5/${bin}.exe \
            usr/lib/mono/4.5/${bin}.exe.config \
            usr/lib/mono/4.5/${bin}.rsp
    done

    subpkg_mv \
        usr/lib/mono/4.5/VBCSCompiler.exe \
        usr/lib/mono/4.5/VBCSCompiler.exe.config \
        usr/lib/mono/4.5/System.Collections.Immutable.dll \
        usr/lib/mono/4.5/System.Reflection.Metadata.dll \
        usr/lib/mono/4.5/Microsoft.CodeAnalysis.*
}

xbuild() {
    pkgdesc="xbuild build system for Mono runtime"
    depends="$pkgname-runtime $pkgname-reference-assemblies $pkgname-csc"

    cd "$pkgdir"
    subpkg_mv \
        usr/bin/xbuild \
        usr/lib/mono/msbuild \
        usr/lib/mono/xbuild \
        usr/lib/mono/xbuild-frameworks \
        usr/lib/mono/4.5/Microsoft.Build* \
        usr/lib/mono/4.5/Mono.XBuild.Tasks* \
        usr/lib/mono/4.5/MSBuild \
        usr/lib/mono/4.5/*.targets \
        usr/lib/mono/4.5/*.tasks \
        usr/lib/mono/4.5/xbuild.* \
        usr/lib/mono/gac/Microsoft.Build* \
        usr/lib/mono/gac/Mono.XBuild.Tasks*
}

dbg() {
    default_dbg
    depends="$pkgname"

    mkdir -p "$subpkgdir"/usr/lib/debug/usr/bin
    mv "$pkgdir"/usr/bin/mono*-gdb.py "$subpkgdir"/usr/lib/debug/usr/bin/

    cd "$pkgdir"
    subpkg_mv \
        usr/lib/mono/lldb \
        $(find \( -name '*.pdb' -o -name '*.mdb' \) 2>/dev/null)
}

sha512sums="5f0f02f2adf89785af8f620c16d69fc97b87c9b39133286e6f1237a397f4842ea8d26802d9f802f8798a86540dc1bc3b5201428f218c78fbcf91f0d575cde512  mono-6.12.0.182.tar.xz
8f97e3ddf66ffcc751d58d5992fb3118379e9b58f6b37953273d06305d58dc9ddd64187189935f7087f938fcca94d9b4fcdc2ecc471dc4d811c07511e6cc7d42  0001-Avoid-setting-PTHREAD_PRIO_INHERIT-on-Alpine-since-t.patch"
